name: Full DevOps Automation - Docker + Terraform + LocalStack

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  full-pipeline:
    runs-on: ubuntu-latest

    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: s3
          DEBUG: 1
          LS_LOG: trace
        options: >-
          --health-cmd "curl -s http://localhost:4566/health | grep 'running' || exit 1"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 30

    steps:
      # Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Wait until LocalStack is ready (with retries)
      - name: Wait for LocalStack
        run: |
          echo "Waiting for LocalStack to be ready..."
          for i in {1..60}; do
            if curl -s http://localhost:4566/health | grep '"s3": "running"' > /dev/null; then
              echo "✅ LocalStack is ready!"
              exit 0
            fi
            echo "Still waiting... ($i)"
            sleep 5
          done
          echo "❌ LocalStack failed to start in time."
          docker logs $(docker ps -aqf "ancestor=localstack/localstack")
          exit 1

      # Terraform setup
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -upgrade

      # Retry Terraform apply in case of LocalStack timing issues
      - name: Terraform Apply with Retry
        working-directory: ./terraform
        run: |
          for attempt in {1..3}; do
            echo "Attempt $attempt: Applying Terraform..."
            terraform apply -auto-approve && break || sleep 10
            if [ $attempt -eq 3 ]; then
              echo "Terraform failed after 3 attempts"
              exit 1
            fi
          done

      - name: Terraform Outputs
        working-directory: ./terraform
        run: terraform output

      # Docker build and test
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Flask App
        run: docker build -t flask-app .

      - name: Run Flask App
        run: docker run -d -p 5000:5000 --name flask-app flask-app

      - name: Wait for Flask App
        run: sleep 5

      - name: Test Flask App
        run: |
          echo "Testing Flask app..."
          curl -f http://localhost:5000 || (echo "Flask app failed to respond!" && exit 1)

      # Clean up Terraform resources
      - name: Terraform Destroy
        working-directory: ./terraform
        run: terraform destroy -auto-approve
